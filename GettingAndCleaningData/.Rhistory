boring_function('My first function!')
boring_function()
boring_function
submit()
submit()
my_mean(c(4,5,10))
my_mean(c(4,5,10))
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(c(1.4,3.6,7.9,8.8))
evaluate(func,c(1.4,3.6,7.9,8.8))
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming", "is","fun!")
submit()
submit()
submit()
telegram("Good","afADS")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
skip()
mad_libs("Pakistan","in","Car")
submit()
submit()
'I' %p%x 'love' %p% ' R!'
"I" %p%x "love" %p%  "R!"
skip()
swirl()
d1 <- Sys.Date()
class(d1)
unclasss(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, %B %d, %Y %H:%M)
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time( > t1)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(),t1,units = 'days')
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5==7)
FALSE & FaLSE
FALSE & FALSE
TRUE & c(TRUE,FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lappy(flags, class)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flag$orange)
sum(flags$orange)
flag_colors <- flags[,(11:17)]
flag_colors <- flags[,11:17]
head(flag_colors)
lappy(flag_colors,sum)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- fla\[,19:23]
flag_shapes <- flags[,19:23]
lapply(flags,range())\
lapply(flags,range)
lapply(flags,range())
a <- lapply(flags,range())
a <- lapply(flags,range)
skip()
shape_mat<- sapply(flag_shapes,range())
shape_mat<- sapply(flag_shapes,range
)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags,unique())
unique_vals <- lapply(flags,unique
)
unique_vals
sapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
swirl()
sapply(flags,unique)
vapply(flags, unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply()
?tapply
table(flags$landmass)
table(flags$animate)
table(flags$animate,flags$landmass,mean)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
swirl()
set.seed(1)
x<-rnorm(100)
e<-rnorm(100,0,2)
y<- 0.5 + 2*x + e
plot(x,y)
x<-rbinom(100,1,0.5)
plot(x,y)
set.seed(1)
x<-rnorm(100)
plot(x,y)
x<-rbinom(100,1,0.5)
plot(x,y)
set.seed(2)
x<-rnorm(100)
log.u <- 0.5+0.3*x
y <- rpois(100,exp(log.u))
plot(x,y)
set.seed(2)
rpois(5,2)
?ppois
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(x,y)
plot(e,y)
swirll()
swirl()
ls
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, nrow=10)
head(plants, 10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
swirl()
library(swirl)
swirl()
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran,ip_id,package,country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran,-time)
select(cran, -x:size)
select(cran, -X:size)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == 'swirl')
filter(cran, r_version == '3.1.1')
filter(cran, r_version == '3.1.1',country=='USU')
filter(cran, r_version == '3.1.1',country=='US')
?Comparison
filter(cran, r_version <= '3.0.2',country=='IN')
filter(cran, country=="US" | country=='IN')
filter(cran, size> 10500 & r_os == "linux-gnu")
filter(cran, size> 10500 & r_os, "linux-gnu")
filter(cran, size> 10500 , r_os=="linux-gnu")
filter(cran, size> 100500 , r_os =="linux-gnu")
is.na(c(3,5,NA,10))
is.na(!c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id )
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2,package, ip_id)
arrange(cran2,country, desc(r_version),ip_id)
cran3 <- select(cran, ip_id, package,size)
cran3
mutate(cran3, size_mb = size/2^20)
mutate(cran3, size_mb = size/2^20, size_gb = size_mb/2^10)
mutate(cran3, correct_size = size-1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
swirl()
library(dplyr)
play()
rm(cran)
rm(cran2)
rm(cran3)
nct()
nxt()
cran <- tbl_df(mydf)
rm("mydf")
cran
?goup_by
?group_by
by_package <- group_by(cran,package)
by_package
summarize(cran, mean(size))
summarize(by_package, mean(size))
?n
submit()
pack_sum
quantile(pack_sum$count, probs=0.99)
top_counts <- filter(pack_sum, count > 6679)
top_counts <- filter(pack_sum, count > 679)
top_countus
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs=0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
arrange(top_unique, desc(unique))
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
submit()
submit()
swirl()
library(tidyr)
students
?gather
gather(student,sex,count,-grade)
gather(students,sex,count,-grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?seperate
?separate
separate(res, sex_class, c("sex","class")))
separate(res, sex_class, c("sex","class"))
submit()
students3
?gather
submit()
?spread
submit()
submit()
extract_numeric("Class5")
extract_numeric("Class5")
extract_numeric("class5")
?mutate
submit()
submit()
submit()
submit()
submit()
skip()
students4
submit()
submit()
submit()
submit()
?unique
submit()
skip()
submit()
submit()
submit()
passed
failed
mutate(passed,status = "passed")
passed <- mutate(passed,status = "passed")
failed <- mutate(passed,status = "failed")
failed <- mutate(failed,status = "failed")
bind_rows(passed,failed)
sat
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package="lubridate")
help(package=lubridate)
this_day <- today()
this_day
this_day(year)
this_day(day)
day.this_day
this_day.day
year(this_day)
wday(this_day)
wday(this_day,label=TRUE)
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
ymd("March 12, 1975")
mdy("March 12, 1975")
mdy("15081985")
mdy(15081985)
dmy(15081985)
dmy(25081985)
ymd("1982012")
ymd("1982012")
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
year(dt2)
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds=55)
this_moment
this_moment <- update(this_moment, hour =5, minutes =43)
this_moment <- update(this_moment, hour =10, minutes =43,seconds=5)
this_moment <- update(this_moment, hour =10, minutes =16,seconds=0)
this_moment <- update(this_moment, hours =10, minutes =16,seconds=0)
this_moment
?now
now(tzone = "EST")
now(tzone = "America/New_York")
now("America/New_York")
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart,hours= 17,minutes=34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrice <- with_tz("Asia/Hong_Kong")
arrice <- with_tz(arrive , "Asia/Hong_Kong")
arrive <- with_tz(arrive , "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008",tz = "Singapore")
last_time
?interval
how_long <- interval(last_time,arrive)
as.period(how_long)
stopwatch()
getwd()
setwd(./datasciencecoursera/GettingAndCleaningData)
setwd("./datasciencecoursera/GettingAndCleaningData")
file <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","survey.csv")
library(dplyr)
library(plyr)
library(plyr)
library(dplyr)
df <- read.csv("survey.csv",header = TRUE)
str(df)
strsplit(names(df),"wgtp")
file <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv","gdp.csv")
?read.csv
dfgdp <- read.csv("gdp.csv",skip= 4)
head(dfgdp,3)
dfgdp1 <- dfgdp[1,]
dfgdp1 <- dfgdp[,1]
dfgdp1 <- dfgdp[,c(1,2,4,5)]
dfgdp <- dfgdp[,c(1,2,4,5)]
rm("dfgdp1")
colnames(dfgdp) <- c("Code", "Rank", "Country", "GDP")
head(dfgdp,3)
dfgdp1 <- dfgdp[!which(dfgdp$Rank==""),]
dfgdp1 <- dfgdp[which(dfgdp$Rank==""),]
head(dfgdp,2)
head(dfgdp1,2)
dfgdp1 <- dfgdp[!(which(dfgdp$Rank=="")),]
dfgdp1 <- dfgdp[!(with(dfgdp$Rank=="")),]
dfgdp1 <- dfgdp[1:190,]
tail(dfgdp1,3)
?strplit
?strsplit
?gsub
dfgdp2 <- gsub(",","",dfgdp1$GDP)
head(dfgdp2$GDP)
head(dfgdp2,3)
tail(dfgdp2,3)
mean(dfgdp2)
class(dfgdp2)
mean(as.numeric(dfgdp2))
grep("^United",dfgdp1$Country)
edu <- read.csv("edu.csv",header = TRUE)
colnames(dfgdp1) <- c("CountryCode","Rank","Country","GDP")
?merge
merge(dfgdp1, edu, "CountryCode")
merged <- merge(dfgdp1, edu, "CountryCode")
merged[,c(1,2,3,13)]
m <- merged[,c(1,2,3,13)]
head(m,3)
m <- m[,c(3,4)]
head(m,3)
c <- grep("*Fiscal year end*June", m$Special.Notes)
c
c <- grep("*Fiscal year end*June", m$Special.Notes,value = TRUE)
grep("*Fiscal year end*June", m$Special.Notes,value = TRUE)
grep("*Fiscal year end*June*", m$Special.Notes,value = TRUE)
grep("(*Fiscal year end*June*)", m$Special.Notes,value = TRUE)
c <- m[grep("*Fiscal year end*June", m$Special.Notes),]
c <- m[grep("*Fiscal year end*", m$Special.Notes),]
c
head(c,3)
v <- c[grep("*June*",c$Special.Notes),]
v$Special.Notes
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
c <- count(grep("^2012*",sampleTimes))
head(c)
head(sampleTimes)
c <- grep("^2012-*",sampleTimes)
count(c)
c <- grepl("^2012-*",sampleTimes)
c
c <- grep("^2012-*",sampleTimes)
wday(sampleTimes[1])
?wday
wday(sampleTimes[1],label=TRUE)
d <- wday(sampleTimes,label=TRUE)
head(d)
e <- grep("Mon",d)
c <- sampleTimes[grepl("^2012-*",sampleTimes),]
c <- sampleTimes[grepl("^2012-*",sampleTimes)]
d <- wday(c,label=TRUE)
e <- grep("Mon",d)
getwd()
source("run_analysis.R")
source("ruun_analysis.R")
source("ruun_analysis.R")
source("ruun_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
View(data.average)
source("run_analysis.R")
View(data.average)
View(data.average)
source("run_analysis.R")
source("run_analysis.R")
source("./ProgrammingAssignment/run_analysis.R")
