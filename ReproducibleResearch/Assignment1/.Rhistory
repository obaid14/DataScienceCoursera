setwd("./DataScienceCoursera/ReproducibleResearch")
getwd()
a <- read.csv("activity.csv", header = TRUE,sep=",",na.rm=TRUE)
a <- read.csv("activity.csv", header = TRUE,sep=",")
na.omit(a)
b <- na.omit(a)
c <- a[complete.cases(a),]
head(b)
class(b$date)
tapply(b$steps,b$date,sum)
tapply(b$steps,b$date,sum,na.rm=TRUE)
d <- tapply(b$steps,b$date,sum,na.rm=TRUE)
d <- na.omit(d)
class(d)
d <- d[complete.cases(d)]
d
hist(d)
d[1,]
d[1]
?aggregate
d <- aggregate(b$steps,b$date,sum)
d <- aggregate(b$steps,as.list(b$date),sum)
d <- aggregate(steps ~ date, b, sum, na.action = na.omit)
d
hist(d)
barplot(b$steps,b$date)
barplot(b$date,b$steps)
hist(b$date)
hist(b$steps)
e <- aggregate(steps ~ date, b, mean, na.action = na.omit)
e
f <- aggregate(steps ~ date, b, median, na.action = na.omit)
hist(d$date,"days",format = "%d %b")
install.packages("hist.POSIXlt")
library(hist.POSIXlt)
library(hist.POSIXt)
install.packages("hist.POSIXt")
library(ggplot2)
d$date <- as.Date(d$date)
head(d)
p <- ggplot(d,aes(date,steps)) + geom_histogram()
print(p)
ggplot(d,aes(date)) + geom_histogram()
ggplot(d,aes(date,as.numeric(steps))) + geom_histogram()
ggplot(d,aes(date,..count..) + geom_histogram()
ggplot(d,aes(date,..count..)) + geom_histogram()
ggplot(d,aes(date,..value..)) + geom_histogram()
ggplot(d,aes(date,steps)) + geom_histogram(binwidth = 30)
?ggplot
?stat_bin
qplot(date,steps, data=d, stat="summary", fun.y="sum", geom="bar")
qplot(date,steps, data=d, fun.y="sum", geom="bar")
?qplot
qplot(date,steps, data=d,  geom="bar")
?stat_count
qplot(date,steps, data=d, stat="identity", geom="bar")
ggplot(d,aes(date,steps)) + geom_bar()
ggplot(d,aes(date,steps)) + geom_bar(stat = "identity")
ggplot(d,aes(date,steps)) + geom_histogram(stat = "identity")
ggplot(d,aes(date,steps)) + geom_histogram(binwidth = 10, bins =60,stat = "identity")
?geom_histogram
ggplot(d,aes(date,steps)) + geom_histogram(binwidth = 10,stat = "identity")
ggplot(d,aes(date,steps)) + geom_histogram(binwidth = 10,bins = 6-, pad = 1,stat = "identity")
ggplot(d,aes(date,steps)) + geom_histogram(binwidth = 10,bins = 60, pad = 1,stat = "identity")
ggplot(d,aes(date,steps)) + geom_histogram(breaks = "days",stat = "identity")
ggplot(d,aes(date,steps)) + geom_histogram(stat = "identity")
ggplot(d,aes(date,steps)) + geom_histogram(stat = "identity", binwidth = 10)
ggplot(d,aes(date,steps)) + geom_histogram(stat = "identity", binwidth = 10,bins=4,pad=TRUE)
ggplot(d,aes(date,steps)) + geom_bar(stat = "identity")
ggplot(d,aes(date,steps)) + geom_histogram(binwidth = 60)
ggplot(d,aes(date,steps)) + geom_histogram(binwidth = 60,stat="identity")
bin <- 6-
0
bin <- 60
ggplot(d,aes(date,steps)) + geom_histogram(binwidth = bin,stat="identity")
class(d$date)
d$num <- as.numeric(d$date)
head(d)
p <- ggplot(d,aes(num,steps))
bin <- 10
p <- p + geom_histogram(stat = "identity", binwidth = bin)
d <- aggregate(steps ~ date, b, sum)
d <- aggregate(steps ~ date, a, sum)
head(d)
head(a)
b <- a[is.na(a)] <- 0
head(b)
b <- a[is.na(a),] <- 0
b <- a[,is.na(a)] <- 0
head(b)
a <- a[is.na(a)] <- 0
source('~/.active-rstudio-document')
a[a$steps == NA] <-0
a[is.na(a)] <- 0
head(a)
b <- aggregate(steps ~ date, a, sum)
class(b$date)
b$date <- as.Date(b$date)
class(b$date)
head(b)
ggplot(b,aes(date,steps)) + geom_histogram(stat = "identity")
ggplot(b,aes(date,steps)) + geom_histogram(stat = "identity")
b$num <- as.numeric(b$date)
bin <- 10
p <- ggplot(b, aes(num, steps))
p <- p + geom_histogram(binwidth = bin)
p
p <- p + geom_histogram(binwidth = bin,stat = "identity")
p <- p + geom_histogram(binwidth = bin)
p <- p + scale_x_date(breaks = seq(min(dates$num)-20,max(dates$num), bin,
labels = date_format("%Y-%b"),
limits = c(as.Date("2012-10-01"),
as.Date("2012-12-31")))
p <- p + scale_x_date(breaks = seq(min(dates$num)-20,max(dates$num), bin),
labels = date_format("%Y-%b"),
limits = c(as.Date("2012-10-01"),
as.Date("2012-12-31")))
p <- p + scale_x_date(breaks = seq(min(b$num)-20,max(b$num), bin),
labels = date_format("%Y-%b"),
limits = c(as.Date("2012-10-01"),
as.Date("2012-12-31")))
library("scales")
p <- p + scale_x_date(breaks = seq(min(b$num)-20,max(b$num), bin),
labels = date_format("%Y-%b"),
limits = c(as.Date("2012-10-01"),
as.Date("2012-12-31")))
p <- p + theme_bw() + xlab(NULL) + opts(axis.text.x  = theme_text(angle=45,
hjust = 1,
vjust = 1))
?opts
??opts
p
class(a$steps)
ggplot(b, aes(x = steps)) + geom_histogram()
ggplot(b, aes(x = steps)) + geom_histogram(stat_bin = "identity")
ggplot(b, aes(x = steps)) + geom_histogram(stat = "identity")
ggplot(b, aes(x = steps,y = dates)) + geom_histogram(stat = "identity")
ggplot(b, aes(x = steps,y = dates)) + geom_histogram()
ggplot(b, aes(x = steps,y = date)) + geom_histogram()
ggplot(d,aes(date,steps)) + geom_bar(stat = "identity") + labs(title = "Histogram of Total Steps taken each day" , x = "Date", Y = "Number of Steps")
ggplot(d,aes(date,steps)) + geom_bar(stat = "identity") + labs(title = "Histogram of Total Steps taken each day" , x = "Date", Y = "Number of Steps") + theme_bw() + theme(axis.text.x = element_text(angle=90))
ggplot(d,aes(date,steps)) + geom_bar(stat = "identity") + labs(title = "Histogram of Total Steps taken each day" , x = "Date", Y = "Number of Steps") + theme_bw() + theme(axis.text.x = element_text(angle=90,hjust = 1))
ggplot(d,aes(date,steps)) + geom_bar(stat = "identity") + labs(title = "Histogram of Total Steps taken each day" , x = "Date", Y = "Number of Steps") + theme_bw() + theme(axis.text.x = element_text(angle=90))
ggplot(d,aes(date,steps)) + geom_bar(stat = "identity") + labs(title = "Histogram of Total Steps taken each day" , x = "Date", y = "Number of Steps") + theme_bw() + theme(axis.text.x = element_text(angle=90))
ggplot(d,aes(date,steps)) + geom_bar(stat = "identity") + labs(title = "Histogram of Total Steps taken each day" , x = "Date", y = "Number of Steps") + theme_bw() + theme(axis.text.x = element_text(angle=45))
ggplot(b,aes(date,steps)) + geom_bar(stat = "identity") + labs(title = "Histogram of Total Steps taken each day" , x = "Date", y = "Number of Steps") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_date(breaks = b$date , labels =date_format("%Y-%b" )
ggplot(b,aes(date,steps)) + geom_bar(stat = "identity") + labs(title = "Histogram of Total Steps taken each day" , x = "Date", y = "Number of Steps") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_date(breaks = b$date , labels =date_format("%Y-%b" ))
ggplot(b,aes(date,steps)) + geom_bar(stat = "identity") + labs(title = "Histogram of Total Steps taken each day" , x = "Date", y = "Number of Steps") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_date(breaks = b$date , labels =date_format("%d"))
ggplot(b,aes(date,steps)) + geom_bar(stat = "identity") + labs(title = "Histogram of Total Steps taken each day" , x = "Date", y = "Number of Steps") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_date(breaks = b$date , labels =date_format("%d %b"))
ggplot(b,aes(date,steps)) + geom_bar(stat = "identity") + labs(title = "Histogram of Total Steps taken each day" , x = "Date", y = "Number of Steps") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_date(breaks = b$date , labels =date_format("%d %m"))
ggplot(b,aes(date,steps)) + geom_bar(stat = "identity") + labs(title = "Histogram of Total Steps taken each day" , x = "Date", y = "Number of Steps") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_date(breaks = b$date , labels =date_format("%d-%m"))
ggplot(b,aes(date,steps)) + geom_bar(stat = "identity") + labs(title = "Histogram of Total Steps taken each day" , x = "Date", y = "Number of Steps") + theme_bw() + theme(axis.text.x = element_text(angle=60)) + scale_x_date(breaks = b$date , labels =date_format("%d-%m"))
ggplot(b,aes(date,steps)) + geom_bar(stat = "identity") + labs(title = "Histogram of Total Steps taken each day" , x = "Date", y = "Number of Steps") + theme_bw() + theme(axis.text.x = element_text(angle=0)) + scale_x_date(breaks = b$date , labels =date_format("%d-%m"))
ggplot(b,aes(date,steps)) + geom_bar(stat = "identity") + labs(title = "Histogram of Total Steps taken each day" , x = "Date", y = "Number of Steps") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_date(breaks = b$date , labels =date_format("%d-%m"))
ggplot(b,aes(date,steps,width = .5)) + geom_bar(stat = "identity") + labs(title = "Histogram of Total Steps taken each day" , x = "Date", y = "Number of Steps") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_date(breaks = b$date , labels =date_format("%d-%m"))
ggplot(b,aes(date,steps,width = 1.25)) + geom_bar(stat = "identity") + labs(title = "Histogram of Total Steps taken each day" , x = "Date", y = "Number of Steps") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_date(breaks = b$date , labels =date_format("%d-%m"))
ggplot(b,aes(date,steps,width = 1)) + geom_bar(stat = "identity") + labs(title = "Histogram of Total Steps taken each day" , x = "Date", y = "Number of Steps") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_date(breaks = b$date , labels =date_format("%d-%m"))
ggplot(b,aes(date,steps,width = 0.75)) + geom_bar(stat = "identity") + labs(title = "Histogram of Total Steps taken each day" , x = "Date", y = "Number of Steps") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_date(breaks = b$date , labels =date_format("%d-%m"))
head(d)
head(e)
head(a)
tail(a)
c <- aggregate(steps ~ interval, a, mean)
head(c)
ggplot(c, aes(interval,steps)) + geom_line() + labs(title="Time Series Plot" x = "Interval" y = "Average Steps taken")
ggplot(c, aes(interval,steps)) + geom_line() + labs(title="Time Series Plot", x = "Interval", y = "Average Steps taken")
ggplot(c, aes(interval,steps)) + geom_line() + labs(title="Time Series Plot", x = "Interval", y = "Average Steps taken") + scale_x_date(breaks = interval)
ggplot(c, aes(interval,steps)) + geom_line() + labs(title="Time Series Plot", x = "Interval", y = "Average Steps taken") + scale_x_date(breaks = c$interval)
ggplot(c, aes(interval,steps)) + geom_line() + labs(title="Time Series Plot", x = "Interval", y = "Average Steps taken") + scale_x_datetime(breaks = c$interval)
ggplot(c, aes(interval,steps)) + geom_line() + labs(title="Time Series Plot", x = "Interval", y = "Average Steps taken") + scale_x_continuous(breaks = c$interval)
ggplot(c, aes(interval,steps)) + geom_line() + labs(title="Time Series Plot", x = "Interval", y = "Average Steps taken") + scale_x_continuous(breaks = c$interval/2)
ggplot(c, aes(interval,steps)) + geom_line() + labs(title="Time Series Plot", x = "Interval", y = "Average Steps taken") + scale_x_discrete(breaks = c$interval/2)
ggplot(c, aes(interval,steps)) + geom_line() + labs(title="Time Series Plot", x = "Interval", y = "Average Steps taken") + scale_x_discrete(breaks = c$interval)
ggplot(c, aes(interval,steps)) + geom_line() + labs(title="Time Series Plot", x = "Interval", y = "Average Steps taken")
ggplot(c, aes(interval,steps)) + geom_line() + labs(title="Time Series Plot", x = "Interval", y = "Average Steps taken") + scale_x_discrete(breaks = c$interval, labels = c$interval)
ggplot(c, aes(interval,steps)) + geom_line() + labs(title="Time Series Plot", x = "Interval", y = "Average Steps taken")
max(c$interval)
c[c$interval == max(c$interval),]
head(b)
head(e)
e <- aggregate(steps ~ date, a, mean)
head(e)
head(a)
d<- read.csv("activity.csv", header = TRUE,sep=",")
head(d)
q <- d[d$steps == NA,]
sum(q)
sum(q$steps)
sum(a$steps)
head(q)
d[!is.na(d),]
q <- d[!is.na(d),]
q <- d[is.na(d),]
head(q)
count(d[is.na(d),])
row(q)
sum(q$steps)
sum(is.na(d))
for( i in 1:nrow(d)){}
for( i in 1:nrow(d)){
if(is.na(d$steps[i])){
d$steps <- c[which(d$interval[i]==c$interval),]$steps
}
}
head(d)
for( i in 1:nrow(d)){
if(is.na(d$steps[i])){
d$steps <- e[which(d$interval[i]==e$interval),]$steps
}
}
head(d)
head(e)
for( i in 1:nrow(d)){
if(is.na(d$steps[i])){
d$steps <- e[which(d$steps[i]==e$steps),]$steps
}
}
head(d)
for( i in 1:nrow(d)){
if(is.na(d$steps[i])){
d$steps <- e[which(d$date[i]==e$date),]$steps
}
}
head(d)
d <- read.csv("activity.csv", header = TRUE,sep=",")
for( i in 1:nrow(d)){
if(is.na(d$steps[i])){
d$steps <- e[which(d$date[i]==e$date),]$steps
}
}
head(d)
d <- read.csv("activity.csv", header = TRUE,sep=",")
for( i in 1:nrow(d)){
if(is.na(d$steps[i])){
d$steps <- c[which(d$interval[i]==c$interval),]$steps
}
}
head(d)
sum(is.na(d))
g <- aggregate(steps ~ date, d, sum)
g$date <- as.Date(g$date)
ggplot(g,aes(date,steps)) + geom_bar(stat = "identity") +
labs(title = "Histogram of Total Steps taken each day" , x = "Date", y = "Number of Steps") +
theme_bw() + theme(axis.text.x = element_text(angle=90)) +
scale_x_date(breaks = g$date , labels =date_format("%d-%m"))
head(g)
head(b)
head(d)
g <- aggregate(steps~date,sum)
g <- aggregate(steps~date,d,sum)
head(g)
d[30,]
d[40,]
d[4000,]
d <- read.csv("activity.csv", header = TRUE,sep=",")
head(d)
d[4000,]
d[400,]
d[430,]
d[13000,]
d[330,]
d[370,]
d[390,]
head(c)
head(d)
for (i in 1:nrow(d)) {
if (is.na(d$steps[i])) {
d$steps[i] <- c[which(d$interval[i] == c$interval), ]$steps
}
}
head(d)
ggplot(d,aes(date,steps)) + geom_bar(stat = "identity") +
labs(title = "Histogram of Total Steps taken each day" , x = "Date", y = "Number of Steps") +
theme_bw() + theme(axis.text.x = element_text(angle=90)) +
scale_x_date(breaks = d$date , labels =date_format("%d-%m"))
g <- aggregate(steps ~ date, d,sum)
g$date <- as.Date(g$date)
ggplot(g,aes(date,steps)) + geom_bar(stat = "identity") +
labs(title = "Histogram of Total Steps taken each day" , x = "Date", y = "Number of Steps") +
theme_bw() + theme(axis.text.x = element_text(angle=90)) +
scale_x_date(breaks = g$date , labels =date_format("%d-%m"))
?weekdays
d$weekday <- weekdays(d$date)
class(d$date)
d$date <- as.Date(d$date)
d$weekday <- weekdays(d$date)
head(d)
class(d$weekday)
d$weekday <-as.factor(d$weekday)
class(d$weekday)
for(i in 1:nrow(d)){
if(d$weekday %in% c("Monday","Tuesday","Wednesday","Thursday","Friday")){
d$weekday <- "Weekday"
}
else
d$weekday <- "Weekend"
}
}
for(i in 1:nrow(d)){
if(d$weekday %in% c("Monday","Tuesday","Wednesday","Thursday","Friday")){
d$weekday <- "Weekday"
}
else
d$weekday <- "Weekend"
}
head(d)
unique(d$weekday)
warnings()
d[1,]
d[1,]$weekday
d$weekday <- weekdays(d$date)
d[1,]$weekday
for(i in 1:nrow(d)){
if(d[i,]$weekday %in% c("Monday", "Tuesday", "Wednesday","Thursday","Friday")){
d[i,]$weekday <- "Weekday"
}
else
d[i,]$weekday <- "Weekend"
}
head(d)
unique(d$weekday)
d$weekday <- as.factor(d$weekday)
h <- aggregate(steps~interval,d,mean)
head(h)
h <- aggregate(steps~interval+weekday,d,mean)
head(h)
unique(h$weekday)
ggplot(h,aes(interval,steps)) + geom_line() + facet_grid(.~h$weekday)
ggplot(h,aes(interval,steps)) + geom_line() + facet_grid(~h$weekday)
ggplot(h,aes(interval,steps)) + geom_line() + facet_grid(h$weekday~.)
par(mfcol = c(1,2))
ggplot(h,aes(interval,steps)) + geom_line()
ggplot(h,aes(interval,steps)) + geom_line()
ggplot(h,aes(interval,steps)) + geom_line() + facet_grid(weekday ~ .)
ggplot(h,aes(interval,steps)) + geom_line() + facet_grid(weekday ~ .) + labs(title = "Steps taken averaged over weekdays and weekends", x = "Interval" , y = "Number of Steps")
knit2html()
library(knitr)
knit2html("first.Rmd")
# Chunk 1
# Reading the data from the csv file
act <- read.csv("activity.csv", header = TRUE,sep=",")
# Replacing the na values as 0
act[is.na(act)] <- 0
# Calculating the total steps taken each day
step_day <- aggregate(steps ~ date, act, sum)
step_day$date <- as.Date(step_day$date)
# Chunk 2
# Plotting a histogram of the total steps taken on each day
ggplot(step_day,aes(date,steps)) + geom_bar(stat = "identity") +
labs(title = "Histogram of Total Steps taken each day" , x = "Date", y = "Number of Steps") +
theme_bw() + theme(axis.text.x = element_text(angle=90)) +
scale_x_date(breaks = step_day$date , labels =date_format("%d-%m"))
# Chunk 3
# Finding the average number of steps taken each day
mean_day <- aggregate(steps ~ date, act, mean)
# Finding the median number of steps taken each day
median_day <- aggregate(steps ~ date, act, median)
# Chunk 4
# Finding the average steps withing each 5 minute interval
interval_step <- aggregate(steps ~ interval, act, mean)
# Plotting the time series plot.
ggplot(interval_step, aes(interval,steps)) + geom_line() +
labs(title="Time Series Plot", x = "Interval", y = "Average Steps taken")
# Chunk 5
# Finding the interval with the max average number of steps taken
interval_step[interval_step$interval == max(interval_step$interval),]
# Chunk 6
# Finding the number of rows with NA's
with_na <- read.csv("activity.csv", header = TRUE,sep=",")
sum(is.na(with_na))
# Chunk 7
# Replacing all NA with the average steps taken in that interval
for( i in 1:nrow(with_na)){
if(is.na(with_na$steps[i])){
with_na$steps <- interval_step[which(with_na$interval[i]==interval_step$interval),]$steps
}
}
# Chunk 8
# Calculating the total steps taken each day(modified)
modified_data <- aggregate(steps ~ date, with_na, sum)
modified_data$date <- as.Date(modified_data$date)
# Plotting a histogram of the total steps taken on each day
ggplot(modified_data,aes(date,steps)) + geom_bar(stat = "identity") +
labs(title = "Histogram of Total Steps taken each day" , x = "Date", y = "Number of Steps") +
theme_bw() + theme(axis.text.x = element_text(angle=90)) +
scale_x_date(breaks = modified_data$date , labels =date_format("%d-%m"))
# Chunk 9
# Finding the average number of steps taken each day
modified_mean <- aggregate(steps ~ date, with_na, mean)
# Finding the median number of steps taken each day
modified_meidan <- aggregate(steps ~ date, with_na, median)
# Chunk 10
# Making the date variable as factor
with_na$date <- as.Date(with_na)
# Adding a new column which will have the weekday
with_na$weekday <- weekdays(with_na$date)
# Chunk 11
for(i in 1:nrow(with_na)){
if(with_na[i,]$weekday %in% c("Monday", "Tuesday", "Wednesday","Thursday","Friday")){
with_na[i,]$weekday <- "Weekday"
}
else
with_na[i,]$weekday <- "Weekend"
}
# Making the weekday variable as factor
with_na$weekday <- as.factor(with_na$weekday)
# Finding the average steps based on the intervals
int_steps <- aggregate(steps~interval+weekday,d,mean)
# Plotting the panel plot of number of steps in each interval
# factored by weekdays and weekends
ggplot(int_steps,aes(interval,steps)) + geom_line() + facet_grid(weekday ~ .)
+ labs(title = "Steps taken averaged over weekdays and weekends",
x = "Interval" ,
y = "Number of Steps")
# Calculating the total steps taken each day(modified)
modified_data <- aggregate(steps ~ date, with_na, sum)
modified_data$date <- as.Date(modified_data$date)
# Plotting a histogram of the total steps taken on each day
ggplot(modified_data,aes(date,steps)) + geom_bar(stat = "identity") +
labs(title = "Histogram of Total Steps taken each day" , x = "Date", y = "Number of Steps") +
theme_bw() + theme(axis.text.x = element_text(angle=90)) +
scale_x_date(breaks = modified_data$date , labels =date_format("%d-%m"))
# Plotting a histogram of the total steps taken on each day
ggplot(step_day,aes(date,steps)) + geom_bar(stat = "identity") +
labs(title = "Histogram of Total Steps taken each day" , x = "Date", y = "Number of Steps") +
theme_bw() + theme(axis.text.x = element_text(angle=90)) +
scale_x_date(breaks = step_day$date , labels =date_format("%d-%m"))
knit2html("PA1_template.Rmd")
setwd("./RepData_PeerAssessment1")
knit2html("PA1_template.Rmd")
knit2html("Assignment.Rmd")
source("activityplot.R")
# Finding the number of rows with NA's
with_na <- read.csv("activity.csv", header = TRUE,sep=",")
sum(is.na(with_na))
# Replacing all NA with the average steps taken in that interval
for( i in 1:nrow(with_na)){
if(is.na(with_na$steps[i])){
with_na$steps <- interval_step[which(with_na$interval[i]==interval_step$interval),]$steps
}
}
# Calculating the total steps taken each day(modified)
# Calcuulating the total steps taken each day (modified)
modified_data <- aggregate(steps ~ date, with_na, sum)
modified_data$date <- as.Date(modified_data$date)
# Plotting a histogram of the total steps taken on each day
ggplot(modified_data,aes(date,steps)) + geom_bar(stat = "identity") +
labs(title = "Histogram of Total Steps taken each day" , x = "Date", y = "Number of Steps") +
theme_bw() + theme(axis.text.x = element_text(angle=90)) +
scale_x_date(breaks = modified_data$date , labels =date_format("%d-%m"))
# Calculating the total steps taken each day(modified)
# Calcuulating the total steps taken each day (modified)
modified_data <- aggregate(steps ~ date, with_na, sum)
modified_data$date <- as.Date(modified_data$date)
png("ModifiedHistogramOfTotalStepsTakenEachDay.png")
# Plotting a histogram of the total steps taken on each day
ggplot(modified_data,aes(date,steps)) + geom_bar(stat = "identity") +
labs(title = "Histogram of Total Steps taken each day" , x = "Date", y = "Number of Steps") +
theme_bw() + theme(axis.text.x = element_text(angle=90)) +
scale_x_date(breaks = modified_data$date , labels =date_format("%d-%m"))
dev.off()
# Finding the number of rows with NA's
with_na <- read.csv("activity.csv", header = TRUE,sep=",")
sum(is.na(with_na))
# Replacing all NA with the average steps taken in that interval
for( i in 1:nrow(with_na)){
if(is.na(with_na$steps[i])){
with_na$steps <- interval_step[which(with_na$interval[i]==interval_step$interval),]$steps
}
}
# Calculating the total steps taken each day(modified)
# Calcuulating the total steps taken each day (modified)
modified_data <- aggregate(steps ~ date, with_na, sum)
modified_data$date <- as.Date(modified_data$date)
png("ModifiedHistogramOfTotalStepsTakenEachDay.png")
# Plotting a histogram of the total steps taken on each day
ggplot(modified_data,aes(date,steps)) + geom_bar(stat = "identity") +
labs(title = "Histogram of Total Steps taken each day" , x = "Date", y = "Number of Steps") +
theme_bw() + theme(axis.text.x = element_text(angle=90)) +
scale_x_date(breaks = modified_data$date , labels =date_format("%d-%m"))
dev.off()
