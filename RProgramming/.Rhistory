TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5 > 8 || 6!=8 && 4>3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5==6,!FALSE)
ints <- sample(10)
ints
ints >5
which(ints>7)
any(ints<0)
all(ints>0)
library("http")
library("httr")
swirl()
Sys.Date()
mean(c(2,4,5))
submit
submit()
boring_function('My first function!')
boring_function()
boring_function
submit()
submit()
my_mean(c(4,5,10))
my_mean(c(4,5,10))
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(c(1.4,3.6,7.9,8.8))
evaluate(func,c(1.4,3.6,7.9,8.8))
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming", "is","fun!")
submit()
submit()
submit()
telegram("Good","afADS")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
skip()
mad_libs("Pakistan","in","Car")
submit()
submit()
'I' %p%x 'love' %p% ' R!'
"I" %p%x "love" %p%  "R!"
skip()
swirl()
d1 <- Sys.Date()
class(d1)
unclasss(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, %B %d, %Y %H:%M)
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time( > t1)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(),t1,units = 'days')
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5==7)
FALSE & FaLSE
FALSE & FALSE
TRUE & c(TRUE,FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lappy(flags, class)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flag$orange)
sum(flags$orange)
flag_colors <- flags[,(11:17)]
flag_colors <- flags[,11:17]
head(flag_colors)
lappy(flag_colors,sum)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- fla\[,19:23]
flag_shapes <- flags[,19:23]
lapply(flags,range())\
lapply(flags,range)
lapply(flags,range())
a <- lapply(flags,range())
a <- lapply(flags,range)
skip()
shape_mat<- sapply(flag_shapes,range())
shape_mat<- sapply(flag_shapes,range
)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags,unique())
unique_vals <- lapply(flags,unique
)
unique_vals
sapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
swirl()
sapply(flags,unique)
vapply(flags, unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply()
?tapply
table(flags$landmass)
table(flags$animate)
table(flags$animate,flags$landmass,mean)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
swirl()
set.seed(1)
x<-rnorm(100)
e<-rnorm(100,0,2)
y<- 0.5 + 2*x + e
plot(x,y)
x<-rbinom(100,1,0.5)
plot(x,y)
set.seed(1)
x<-rnorm(100)
plot(x,y)
x<-rbinom(100,1,0.5)
plot(x,y)
set.seed(2)
x<-rnorm(100)
log.u <- 0.5+0.3*x
y <- rpois(100,exp(log.u))
plot(x,y)
set.seed(2)
rpois(5,2)
?ppois
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(x,y)
plot(e,y)
swirll()
swirl()
ls
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, nrow=10)
head(plants, 10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
getwd()
setwd("C:/Users/mohammed.obaidullah/Documents/datasciencecoursera")
setwd("C:/Users/mohammed.obaidullah/Documents/datasciencecoursera/RProgramming")
source("ques2.R")
best("TX", "heart failure")
a <- read.csv("C:/Users/mohammed.obaidullah/Documents/datasciencecoursera/RProgramming/assignment3/outcome-of-care-measures.csv")
for(i in levels(a$State)){}
for(i in levels(a$State)){
if( i == "TX") { print("Texas")}
else { print("Not there")}
}
for(i in levels(a$State)){
if( i == "TX") { print("Texas")
break }
else { print("Not there")}
}
source("ques2.R")
best("TX", "heart failure")
for(i in levels(a$State)){
if( i == "TX") { print("Texas")
break }
}
source("ques2.R")
best("TX", "heart failure")
source("ques2.R")
best("TX", "heart failure")
source("ques2.R")
best("TX", "heart failure")
source("ques2.R")
best("TX", "heart failure")
source("ques2.R")
best("TX", "heart failure")
source("ques2.R")
best("TX", "heart failure")
source("ques2.R")
best("TX", "heart failure")
best("MD", "heart failure")
best("DD", "heart failure")
best("DD", "heart failue")
best("DD", "heart failure")
source("ques2.R")
best("MD", "heart failure")
best("DD", "heart failure")
source("rankhospital.R")
rankhospital("TX","heart failure",3)
source("rankhospital.R")
rankhospital("TX","heart failure",3)
source("rankhospital.R")
rankhospital("TX","heart failure",3)
source("rankhospital.R")
rankhospital("TX","heart failure",3)
source("rankhospital.R")
rankhospital("TX","heart failure",3)
source("rankhospital.R")
rankhospital("TX","heart failure",3)
rankhospital("TX","heart failure",4)
rankhospital("TX","heart failure",worst)
rankhospital("TX","heart failure","worst")
rankhospital("MD","heart attack","worst")
rankhospital("TX","heart failure",4)
rankhospital("MN","heart attack",5000)
b <- a[,c(2,7,17)]
c <- subset(b,b["State"]=="TX")
d <- c[,3]
e <- as.numeric(levels(d)[d])
f <- e[!is.na(e)]
f
min(f)
g <- c[!c[3]=="Not Available"]
h <- g[order(g[3],g[1]),]
h <- g[order(g[3],g[1]),]
g
g <- c[!c[3]=="Not Available",]
h <- g[order(g[3],g[1]),]
i <- h[4,]
i[1]
y
i
h
h <- g[order(g[3],]
h <- g[order(g[3]),]
g <- h[4,]
g
h
head(h)
head(f)
min(f)
order(f)
sort(f)
head(h)
g <- h[order(h$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure),]
head(g)
tail(g)
g <- order(h$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
g
index <- with(h, order(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, Hospital.Name))
g <- h[index,]
head(g)
h
q <- c(8.1,9.9,5.6,6,10.0,17,12.4)
sort(q)
order(q)
class(h$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
g <- h[order(as.numeric(levels(h$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)))[h$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure],]
g
g <- h[order(as.numeric(h$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)),]
g
library(plyr)
arrange(h,Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
class(arrange(h,Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure))
head(h)
h <- c[!c[3]=="Not Available",]
head(h)
g <- with(h,h[order(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure),])
i <- h[order(h$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure),]
head(g)
head(i)
q <- ddply(h, Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure )
q <- ddply(h, h$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure )
head(q)
q <- arrange(h, h$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure )
hed(q)
head(q)
i <-h[3,]
head(i)
i <-h[,3]
head(i)
j <- as.numeric(levels(i)[i])
head(j)
k <- h[match(j,h$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure),]
head(k)
j <- sort(j)
head(j)
k <- h[match(j,h$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure),]
head(k)
k <- h[match(j,h[,3]),]
head(k)
k
head(h)
g <- as.list(h)
head(g)
i <- g[order(g$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure),]
i <- g[order(g$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)]
head(g[3])
i <- g[order(g[3])]
i
i <- h[3]
i
head(c)
head(c,15)
g <- c[!c[3]=="Not Available",]
length(g)
g
h <- g[order(g[3]),]
h
h <- g[order(g[3],g[1]),]
h
h <- g[[3]]
h <- order(g[[3]],g$Hospital.Name)
i <- g[with(g,h),]
head(i)
head(h)
h <- g[[3]]
head(h)
sort(h)
min(h)
h <- g[[3]]
h <- as.numeric(h)
head(h)
h <- g[[3]]
h <- as.numeric(levels(h)[h])
head(h)
sort(h)
k <- g[sort(as.numeric(levels(g[[3]])[g[[3]]]))]
k <- g[sort(as.numeric(levels(g[,3])[g[,3]]))]
head(g[,3])
head(as.numeric(levels(g[,3])[g[,3]]))
head(sort(as.numeric(levels(g[,3])[g[,3]])))
head(order(as.numeric(levels(g[,3])[g[,3]])))
head(g[,3],50)
getwd()
source("ques3.R")
rankhospital("TX", "heart failure", 4)
source("ques3.R")
rankhospital("TX", "heart failure", 4)
head(g)
h <- g[order(g[,3]),]
head(h)
source("rankhospital.R")
rankhospital("TX","heart failure",4)
source("rankhospital.R")
rankhospital("TX","heart failure",4)
source("rankhospital.R")
rankhospital("TX","heart failure",4)
getwd()
rm(list=ls())
source("rankhospital.R")
source("rankhospital.R")
rankhospital("TX","heart failure",4)
source("rankhospital.R")
rankhospital("TX","heart failure",4)
source("ques3.R")
rankhospital("TX","heart failure",4)
source("rankhospital.R")
rankhospital("TX","heart failure",4)
source("rankhospital.R")
rankhospital("TX","heart failure",4)
source("rankhospital.R")
rankhospital("TX","heart failure",4)
source("rankhospital.R")
rankhospital("TX","heart failure",4)
source("rankhospital.R")
rankhospital("TX","heart failure",4)
source("rankhospital.R")
rankhospital("TX","heart failure",4)
source("rankhospital.R")
rankhospital("TX","heart failure",4)
rankhospital("TX","heart failure",400)
rankhospital("TX","heart failure",40000)
source("rankhospital.R")
rankhospital("TX","heart failure",4)
rankhospital("MD","heart attack","worst")
rankhospital("MD","heart attack",5)
rankhospital("MD","heart attack")
rankhospital("MD","heart attack","worst")
rankhospital("MD","heart attack","worst")
source("ques3.R")
rankhospital("MD","heart attack","worst")
source("ques3.R")
rankhospital("MD","heart attack","worst")
source("rankhospital.R")
rankhospital("MD","heart attack","worst")
source("rankall.R")
rankhospital("heart attack","best")
rankall("heart attack","best")
source("rankall.R")
rankall("heart attack","best")
source("rankall.R")
rankall("heart attack","best")
a <- read.csv("C:/Users/mohammed.obaidullah/Documents/datasciencecoursera/RProgramming/assignment3/outcome-of-care-measures.csv")
head(a[,7])
head(unique(a[,7]))
a <- read.csv("C:/Users/mohammed.obaidullah/Documents/datasciencecoursera/RProgramming/assignment3/outcome-of-care-measures.csv")[c(2,7,11)]
head(unique(a[,2]))
b <- unique(a[,2])
for (i in b){
if(i == "TX"){
print("Texas")
break
}
}
source("rankall.R")
rankall("heart attack","best")
source("rankall.R")
rankall("heart attack","best")
rankall("heart attack",20)
rankall("pneumonia","worst")
source("rankall.R")
rankall("pneumonia","worst")
source("rankall.R")
rankall("pneumonia","worst")
source("rankall.R")
rankall("pneumonia","worst")
source("rankall.R")
rankall("pneumonia","worst")
source("rankall.R")
rankall("pneumonia","worst")
source("best.R")
source("rankhospital.R")
best("TX","heart attack")
best("TX","heart failure")
best("MD","heart failure")
best("MD","pneumonia")
best("MD","heart attack")
source("best.R")
best("MD","heart attack")
best("MD","pneumonia")
rankhospital("TX","heart attack",20)
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r
r <- rankall("pneumonia", "worst")
r
r <- rankall("heart failure", 10)
r
